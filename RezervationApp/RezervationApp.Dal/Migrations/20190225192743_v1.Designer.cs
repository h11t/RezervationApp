// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RezervationApp.Dal;

namespace RezervationApp.Dal.Migrations
{
    [DbContext(typeof(RezervationContext))]
    [Migration("20190225192743_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RezervationApp.Model.Model.Bilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Fiyat");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("IsDelete");

                    b.Property<int>("KullaniciId");

                    b.Property<int>("UcusId");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UcusId");

                    b.ToTable("Bilet");
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired();

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("IsDelete");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired();

                    b.Property<string>("Mail")
                        .IsRequired();

                    b.Property<string>("Sifre")
                        .IsRequired();

                    b.Property<string>("Soyad")
                        .IsRequired();

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Rota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("IsDelete");

                    b.Property<int>("KalkisId");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<int>("VarisId");

                    b.Property<int?>("VarisSehriId");

                    b.HasKey("Id");

                    b.HasIndex("KalkisId");

                    b.HasIndex("VarisSehriId");

                    b.ToTable("Rota");
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired();

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Sehir");
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Ucus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BusinessFiyat");

                    b.Property<double>("EcoFiyat");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("KalkisSaati");

                    b.Property<int>("RotaId");

                    b.Property<DateTime>("UcusSuresi");

                    b.Property<DateTime>("UcusTarihi");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("RotaId");

                    b.ToTable("Ucus");
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Bilet", b =>
                {
                    b.HasOne("RezervationApp.Model.Model.Kullanici", "Kullanici")
                        .WithMany("KullanicininBiletleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RezervationApp.Model.Model.Ucus", "UcusBilgisi")
                        .WithMany()
                        .HasForeignKey("UcusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Rota", b =>
                {
                    b.HasOne("RezervationApp.Model.Model.Sehir", "KalkisSehri")
                        .WithMany()
                        .HasForeignKey("KalkisId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RezervationApp.Model.Model.Sehir", "VarisSehri")
                        .WithMany()
                        .HasForeignKey("VarisSehriId");
                });

            modelBuilder.Entity("RezervationApp.Model.Model.Ucus", b =>
                {
                    b.HasOne("RezervationApp.Model.Model.Rota", "RotaBilgisi")
                        .WithMany()
                        .HasForeignKey("RotaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
